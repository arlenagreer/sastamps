var SAPA_MEETINGS=(()=>{var I=Object.create;var y=Object.defineProperty;var x=Object.getOwnPropertyDescriptor;var F=Object.getOwnPropertyNames;var z=Object.getPrototypeOf,O=Object.prototype.hasOwnProperty;var H=(s=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(s,{get:(e,t)=>(typeof require<"u"?require:e)[t]}):s)(function(s){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+s+'" is not supported')});var S=(s,e)=>()=>(s&&(e=s(s=0)),e);var J=(s,e)=>()=>(e||s((e={exports:{}}).exports,e),e.exports),M=(s,e)=>{for(var t in e)y(s,t,{get:e[t],enumerable:!0})},U=(s,e,t,i)=>{if(e&&typeof e=="object"||typeof e=="function")for(let n of F(e))!O.call(s,n)&&n!==t&&y(s,n,{get:()=>e[n],enumerable:!(i=x(e,n))||i.enumerable});return s};var A=(s,e,t)=>(t=s!=null?I(z(s)):{},U(e||!s||!s.__esModule?y(t,"default",{value:s,enumerable:!0}):t,s));var R={};M(R,{CalendarAdapter:()=>g,calendarAdapter:()=>V});var g,V,C=S(()=>{g=class{constructor(){this.eventTypeStyles={business:{color:"#1a5276",bgColor:"#e8f4f8"},auction:{color:"#d35400",bgColor:"#fdf2e8"},social:{color:"#27ae60",bgColor:"#e8f8f0"},regular:{color:"#8e44ad",bgColor:"#f3e8f8"},holiday:{color:"#c0392b",bgColor:"#fdeaea"},picnic:{color:"#f39c12",bgColor:"#fef9e7"}}}convertToCalendarEvents(e){return!e||!e.meetings?[]:e.meetings.map(t=>this.convertMeetingToEvent(t))}convertMeetingToEvent(e){let t=new Date(e.date),i=this.eventTypeStyles[e.type]||this.eventTypeStyles.regular;return{id:e.id,date:this.formatDateForCalendar(t),summary:e.title,description:this.buildEventDescription(e),type:e.type,cancelled:e.cancelled||!1,time:e.time,location:e.location,color:i.color,bgColor:i.bgColor,tags:e.tags||[],HTMLContent:this.buildEventHTML(e),popover:{modifier:"vc-red",html:this.buildPopoverHTML(e)}}}formatDateForCalendar(e){return e.toISOString().split("T")[0]}buildEventDescription(e){let t=e.description||"";return e.presenter&&e.presenter.name&&(t+=`

Presenter: ${e.presenter.name}`),e.specialNotes&&e.specialNotes.length>0&&(t+=`

Special Notes:
${e.specialNotes.join(`
`)}`),t.trim()}buildEventHTML(e){let t=e.time?`${e.time.doorsOpen||e.time.meetingStart}`:"",i=e.cancelled?"cancelled":"";return`
            <div class="calendar-event ${`event-${e.type}`} ${i}">
                <div class="event-time">${t}</div>
                <div class="event-title">${e.title}</div>
                ${e.cancelled?'<div class="event-cancelled">CANCELLED</div>':""}
            </div>
        `}buildPopoverHTML(e){let t=e.location?`${e.location.name}<br>${e.location.address?.street}`:"Location TBD",i=e.time?`
            <strong>Schedule:</strong><br>
            Doors: ${e.time.doorsOpen}<br>
            Meeting: ${e.time.meetingStart} - ${e.time.meetingEnd}
        `:"",n=e.presenter?`<br><strong>Presenter:</strong> ${e.presenter.name}`:"";return`
            <div class="meeting-popover">
                ${e.cancelled?'<div class="cancelled-notice"><strong>\u26A0\uFE0F CANCELLED</strong></div>':""}
                <h4>${e.title}</h4>
                <div class="meeting-details">
                    <strong>Date:</strong> ${this.formatDisplayDate(new Date(e.date))}<br>
                    ${i}
                    <br><strong>Location:</strong><br>
                    ${t}
                    ${n}
                    <br><br>
                    <div class="meeting-description">
                        ${e.description||""}
                    </div>
                </div>
            </div>
        `}formatDisplayDate(e){return e.toLocaleDateString("en-US",{weekday:"long",year:"numeric",month:"long",day:"numeric"})}getEventsForMonth(e,t,i){return e.filter(n=>{let a=new Date(n.date);return a.getFullYear()===t&&a.getMonth()===i})}getUpcomingEvents(e,t=5){let i=new Date;return e.filter(a=>new Date(a.date)>=i&&!a.cancelled).sort((a,o)=>new Date(a.date)-new Date(o.date)).slice(0,t)}getNextMeeting(e){let t=this.getUpcomingEvents(e,1);return t.length>0?t[0]:null}filterEventsByType(e,t){return e.filter(i=>i.type===t)}getEventStatistics(e){let t={total:e.length,byType:{},upcoming:0,cancelled:0},i=new Date;return e.forEach(n=>{t.byType[n.type]=(t.byType[n.type]||0)+1,new Date(n.date)>=i&&!n.cancelled&&t.upcoming++,n.cancelled&&t.cancelled++}),t}},V=new g});var D={};M(D,{Modal:()=>f,modal:()=>X});var f,X,E=S(()=>{f=class{constructor(){this.modal=null,this.isOpen=!1,this.focusableElements=null,this.previousFocus=null,this.init()}init(){this.createModal(),this.bindEvents()}createModal(){let e=document.getElementById("event-modal");e&&e.remove(),document.body.insertAdjacentHTML("beforeend",`
            <div id="event-modal" class="modal-overlay" role="dialog" aria-modal="true" aria-labelledby="modal-title" aria-hidden="true">
                <div class="modal-container">
                    <div class="modal-header">
                        <h2 id="modal-title" class="modal-title">Event Details</h2>
                        <button type="button" class="modal-close" aria-label="Close modal">
                            <i class="fas fa-times"></i>
                        </button>
                    </div>
                    <div class="modal-content">
                        <div id="modal-body" class="modal-body">
                            <!-- Content will be dynamically inserted here -->
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary modal-close-btn">Close</button>
                    </div>
                </div>
            </div>
        `),this.modal=document.getElementById("event-modal")}bindEvents(){this.modal.querySelectorAll(".modal-close, .modal-close-btn").forEach(t=>{t.addEventListener("click",()=>this.close())}),this.modal.addEventListener("click",t=>{t.target===this.modal&&this.close()}),document.addEventListener("keydown",t=>{t.key==="Escape"&&this.isOpen&&this.close()}),this.modal.addEventListener("keydown",t=>{t.key==="Tab"&&this.isOpen&&this.trapFocus(t)})}open(e){this.isOpen||(this.previousFocus=document.activeElement,this.populateContent(e),this.modal.style.display="flex",this.modal.setAttribute("aria-hidden","false"),setTimeout(()=>{this.modal.classList.add("modal-open"),this.isOpen=!0,this.setFocusableElements(),this.focusableElements.length>0&&this.focusableElements[0].focus()},10),document.body.style.overflow="hidden")}close(){this.isOpen&&(this.modal.classList.remove("modal-open"),this.modal.setAttribute("aria-hidden","true"),setTimeout(()=>{this.modal.style.display="none",this.isOpen=!1},300),document.body.style.overflow="",this.previousFocus&&this.previousFocus.focus())}populateContent(e){let t=this.modal.querySelector("#modal-title"),i=this.modal.querySelector("#modal-body");t.textContent=e.title;let n=this.buildMeetingContent(e);i.innerHTML=n}buildMeetingContent(e){let i=new Date(e.date).toLocaleDateString("en-US",{weekday:"long",year:"numeric",month:"long",day:"numeric"}),n=`event-type-${e.type}`,a=e.cancelled?"event-cancelled":"";return`
            <div class="event-details ${n} ${a}">
                ${e.cancelled?'<div class="cancelled-banner"><i class="fas fa-exclamation-triangle"></i> This event has been cancelled</div>':""}
                
                <div class="event-meta">
                    <div class="event-date">
                        <i class="fas fa-calendar"></i>
                        <span>${i}</span>
                    </div>
                    <div class="event-type">
                        <i class="fas fa-tag"></i>
                        <span class="type-badge type-${e.type}">${this.capitalizeFirst(e.type)}</span>
                    </div>
                </div>

                ${e.time?this.buildTimeSection(e.time):""}
                ${e.location?this.buildLocationSection(e.location):""}
                ${e.presenter?this.buildPresenterSection(e.presenter):""}
                ${e.description?this.buildDescriptionSection(e.description):""}
                ${e.agenda?this.buildAgendaSection(e.agenda):""}
                ${e.specialNotes?this.buildSpecialNotesSection(e.specialNotes):""}
                ${e.requirements?this.buildRequirementsSection(e.requirements):""}
                ${e.contact?this.buildContactSection(e.contact):""}
            </div>
        `}buildTimeSection(e){return`
            <div class="detail-section">
                <h3><i class="fas fa-clock"></i> Schedule</h3>
                <div class="time-details">
                    ${e.doorsOpen?`<div class="time-item"><strong>Doors Open:</strong> ${e.doorsOpen}</div>`:""}
                    ${e.meetingStart?`<div class="time-item"><strong>Meeting Start:</strong> ${e.meetingStart}</div>`:""}
                    ${e.meetingEnd?`<div class="time-item"><strong>Meeting End:</strong> ${e.meetingEnd}</div>`:""}
                </div>
            </div>
        `}buildLocationSection(e){let t=e.address,i=t?`${t.street}, ${t.city}, ${t.state} ${t.zipCode}`:"";return`
            <div class="detail-section">
                <h3><i class="fas fa-map-marker-alt"></i> Location</h3>
                <div class="location-details">
                    <div class="location-name">${e.name}</div>
                    ${e.building?`<div class="location-building">${e.building}</div>`:""}
                    ${e.room?`<div class="location-room">${e.room}</div>`:""}
                    ${i?`<div class="location-address">${i}</div>`:""}
                </div>
            </div>
        `}buildPresenterSection(e){return`
            <div class="detail-section">
                <h3><i class="fas fa-user"></i> Presenter</h3>
                <div class="presenter-details">
                    <div class="presenter-name">${e.name}</div>
                    ${e.bio?`<div class="presenter-bio">${e.bio}</div>`:""}
                </div>
            </div>
        `}buildDescriptionSection(e){return`
            <div class="detail-section">
                <h3><i class="fas fa-info-circle"></i> Description</h3>
                <div class="description-content">
                    ${e}
                </div>
            </div>
        `}buildAgendaSection(e){return`
            <div class="detail-section">
                <h3><i class="fas fa-list"></i> Agenda</h3>
                <div class="agenda-list">
                    ${e.map(i=>`
            <div class="agenda-item">
                <div class="agenda-time">${i.time}</div>
                <div class="agenda-content">
                    <div class="agenda-title">${i.item}</div>
                    ${i.presenter?`<div class="agenda-presenter">Presenter: ${i.presenter}</div>`:""}
                </div>
            </div>
        `).join("")}
                </div>
            </div>
        `}buildSpecialNotesSection(e){return`
            <div class="detail-section">
                <h3><i class="fas fa-exclamation-circle"></i> Special Notes</h3>
                <ul class="special-notes">
                    ${e.map(i=>`<li>${i}</li>`).join("")}
                </ul>
            </div>
        `}buildRequirementsSection(e){let t=`
            <div class="detail-section">
                <h3><i class="fas fa-clipboard-check"></i> Requirements</h3>
                <div class="requirements-list">
        `;if(e.rsvpRequired!==void 0&&(t+=`<div class="requirement-item">
                <i class="fas fa-${e.rsvpRequired?"check":"times"}"></i>
                RSVP ${e.rsvpRequired?"Required":"Not Required"}
            </div>`),e.membershipRequired!==void 0&&(t+=`<div class="requirement-item">
                <i class="fas fa-${e.membershipRequired?"check":"times"}"></i>
                Membership ${e.membershipRequired?"Required":"Not Required"}
            </div>`),e.bringItems&&e.bringItems.length>0){let i=e.bringItems.map(n=>`<li>${n}</li>`).join("");t+=`<div class="requirement-item">
                <strong>Bring:</strong>
                <ul>${i}</ul>
            </div>`}return t+="</div></div>",t}buildContactSection(e){return`
            <div class="detail-section">
                <h3><i class="fas fa-envelope"></i> Contact</h3>
                <div class="contact-details">
                    <div class="contact-name">${e.name}</div>
                    ${e.email?`<div class="contact-email">
                        <a href="mailto:${e.email}">
                            <i class="fas fa-envelope"></i> ${e.email}
                        </a>
                    </div>`:""}
                    ${e.phone?`<div class="contact-phone">
                        <a href="tel:${e.phone}">
                            <i class="fas fa-phone"></i> ${e.phone}
                        </a>
                    </div>`:""}
                </div>
            </div>
        `}setFocusableElements(){let e=["button","[href]","input","select","textarea",'[tabindex]:not([tabindex="-1"])'];this.focusableElements=Array.from(this.modal.querySelectorAll(e.join(","))).filter(t=>!t.disabled&&!t.hidden)}trapFocus(e){if(this.focusableElements.length===0)return;let t=this.focusableElements[0],i=this.focusableElements[this.focusableElements.length-1];e.shiftKey?document.activeElement===t&&(i.focus(),e.preventDefault()):document.activeElement===i&&(t.focus(),e.preventDefault())}capitalizeFirst(e){return e.charAt(0).toUpperCase()+e.slice(1)}},X=new f});var w={};M(w,{ReminderSystem:()=>v,reminderSystem:()=>G});var v,G,P=S(()=>{v=class{constructor(){this.storageKey="sapa-meeting-reminders",this.settingsKey="sapa-reminder-settings",this.reminderTimers=new Map,this.defaultSettings={enabled:!1,reminderTimes:[{label:"1 day before",minutes:24*60},{label:"2 hours before",minutes:2*60},{label:"30 minutes before",minutes:30}],showBrowserNotifications:!1,playSound:!1},this.init()}init(){this.loadSettings(),this.checkPermissions(),this.scheduleReminders(),this.createReminderUI(),setInterval(()=>this.checkDueReminders(),6e4),console.log("Reminder system initialized")}loadSettings(){try{let e=localStorage.getItem(this.settingsKey);this.settings=e?{...this.defaultSettings,...JSON.parse(e)}:{...this.defaultSettings}}catch(e){console.warn("Error loading reminder settings:",e),this.settings={...this.defaultSettings}}}saveSettings(){try{localStorage.setItem(this.settingsKey,JSON.stringify(this.settings))}catch(e){console.warn("Error saving reminder settings:",e)}}async checkPermissions(){"Notification"in window?Notification.permission==="default"?this.settings.showBrowserNotifications=!1:Notification.permission==="granted"||(this.settings.showBrowserNotifications=!1):this.settings.showBrowserNotifications=!1}async requestNotificationPermission(){if("Notification"in window){let e=await Notification.requestPermission();return this.settings.showBrowserNotifications=e==="granted",this.saveSettings(),e==="granted"}return!1}setReminders(e){if(!this.settings.enabled)return;this.clearAllReminders();let t=new Date,i=[];e.forEach(n=>{if(n.cancelled)return;let a=new Date(n.date);if(n.time&&n.time.meetingStart){let[o,l]=n.time.meetingStart.split(" "),[r,u]=o.split(":").map(Number),d=r;l==="PM"&&r!==12&&(d+=12),l==="AM"&&r===12&&(d=0),a.setHours(d,u,0,0)}a<=t||this.settings.reminderTimes.forEach(o=>{let l=new Date(a.getTime()-o.minutes*6e4);if(l>t){let r=`${n.id}-${o.minutes}`;i.push({id:r,meetingId:n.id,meetingTitle:n.title,meetingDate:a,reminderDate:l,reminderLabel:o.label,reminderMinutes:o.minutes})}})}),this.saveReminders(i),this.scheduleReminders()}saveReminders(e){try{localStorage.setItem(this.storageKey,JSON.stringify(e))}catch(t){console.warn("Error saving reminders:",t)}}loadReminders(){try{let e=localStorage.getItem(this.storageKey);return e?JSON.parse(e):[]}catch(e){return console.warn("Error loading reminders:",e),[]}}scheduleReminders(){if(!this.settings.enabled)return;this.clearAllReminders();let e=this.loadReminders(),t=new Date;e.forEach(i=>{let a=new Date(i.reminderDate).getTime()-t.getTime();if(a>0){let o=setTimeout(()=>{this.showReminder(i),this.removeReminder(i.id)},a);this.reminderTimers.set(i.id,o)}}),console.log(`Scheduled ${this.reminderTimers.size} reminders`)}clearAllReminders(){this.reminderTimers.forEach(e=>clearTimeout(e)),this.reminderTimers.clear()}removeReminder(e){this.reminderTimers.has(e)&&(clearTimeout(this.reminderTimers.get(e)),this.reminderTimers.delete(e));let t=this.loadReminders().filter(i=>i.id!==e);this.saveReminders(t)}checkDueReminders(){if(!this.settings.enabled)return;let e=this.loadReminders(),t=new Date;e.filter(n=>new Date(n.reminderDate)<=t).forEach(n=>{this.showReminder(n),this.removeReminder(n.id)})}showReminder(e){let t=new Date(e.meetingDate),i=t.toLocaleDateString("en-US",{weekday:"long",month:"long",day:"numeric"}),n=t.toLocaleTimeString("en-US",{hour:"numeric",minute:"2-digit",hour12:!0});this.showInPageNotification({title:`Meeting Reminder: ${e.reminderLabel}`,message:`${e.meetingTitle}`,details:`${i} at ${n}`,meetingId:e.meetingId}),this.settings.showBrowserNotifications&&"Notification"in window&&Notification.permission==="granted"&&this.showBrowserNotification(e,i,n),this.settings.playSound&&this.playNotificationSound(),console.log("Reminder shown:",e.meetingTitle,e.reminderLabel)}showBrowserNotification(e,t,i){let n=new Notification("SAPA Meeting Reminder",{body:`${e.meetingTitle}
${t} at ${i}`,icon:"/favicon.ico",badge:"/favicon.ico",tag:`sapa-meeting-${e.meetingId}`,requireInteraction:!1});n.onclick=()=>{window.focus(),n.close()},setTimeout(()=>n.close(),1e4)}showInPageNotification(e){let t=document.getElementById("reminder-notification");t&&t.remove();let i=document.createElement("div");i.id="reminder-notification",i.className="reminder-notification",i.innerHTML=`
            <div class="reminder-content">
                <div class="reminder-header">
                    <strong>${e.title}</strong>
                    <button class="reminder-close" aria-label="Close notification">\xD7</button>
                </div>
                <div class="reminder-message">${e.message}</div>
                <div class="reminder-details">${e.details}</div>
                <div class="reminder-actions">
                    <button class="btn btn-sm btn-primary reminder-view">View Details</button>
                    <button class="btn btn-sm btn-light reminder-dismiss">Dismiss</button>
                </div>
            </div>
        `,i.querySelector(".reminder-close").onclick=()=>i.remove(),i.querySelector(".reminder-dismiss").onclick=()=>i.remove(),i.querySelector(".reminder-view").onclick=()=>{window.modal&&e.meetingId&&console.log("View meeting details:",e.meetingId),i.remove()},document.body.appendChild(i),setTimeout(()=>{i.parentNode&&i.remove()},15e3)}playNotificationSound(){try{let e=new(window.AudioContext||window.webkitAudioContext),t=e.createOscillator(),i=e.createGain();t.connect(i),i.connect(e.destination),t.frequency.setValueAtTime(800,e.currentTime),t.frequency.setValueAtTime(600,e.currentTime+.1),i.gain.setValueAtTime(.3,e.currentTime),i.gain.exponentialRampToValueAtTime(.01,e.currentTime+.3),t.start(e.currentTime),t.stop(e.currentTime+.3)}catch(e){console.warn("Could not play notification sound:",e)}}createReminderUI(){if(!(window.location.hostname==="localhost"||window.location.hostname==="127.0.0.1"))return;let e=document.getElementById("reminder-settings-container");e&&(e.innerHTML=`
            <div class="reminder-settings">
                <h3>Meeting Reminders</h3>
                <div class="reminder-controls">
                    <label class="reminder-toggle">
                        <input type="checkbox" ${this.settings.enabled?"checked":""} id="reminder-enabled">
                        Enable meeting reminders
                    </label>
                    
                    <div class="reminder-options ${this.settings.enabled?"":"disabled"}">
                        <label class="reminder-option">
                            <input type="checkbox" ${this.settings.showBrowserNotifications?"checked":""} id="browser-notifications">
                            Browser notifications
                        </label>
                        
                        <label class="reminder-option">
                            <input type="checkbox" ${this.settings.playSound?"checked":""} id="play-sound">
                            Play notification sound
                        </label>
                        
                        <div class="reminder-times">
                            <strong>Reminder Times:</strong>
                            ${this.settings.reminderTimes.map(t=>`
                                <div class="reminder-time-item">
                                    <span>${t.label}</span>
                                </div>
                            `).join("")}
                        </div>
                    </div>
                    
                    <div class="reminder-actions">
                        <button class="btn btn-sm btn-primary" id="save-reminder-settings">Save Settings</button>
                        <button class="btn btn-sm btn-secondary" id="test-reminder">Test Reminder</button>
                    </div>
                </div>
            </div>
        `,this.bindUIEvents())}bindUIEvents(){let e=document.getElementById("reminder-enabled"),t=document.getElementById("browser-notifications"),i=document.getElementById("play-sound"),n=document.getElementById("save-reminder-settings"),a=document.getElementById("test-reminder");e&&(e.onchange=()=>{this.settings.enabled=e.checked;let o=document.querySelector(".reminder-options");o&&o.classList.toggle("disabled",!e.checked)}),t&&(t.onchange=async()=>{if(t.checked){let o=await this.requestNotificationPermission();t.checked=o,this.settings.showBrowserNotifications=o}else this.settings.showBrowserNotifications=!1}),i&&(i.onchange=()=>{this.settings.playSound=i.checked}),n&&(n.onclick=()=>{this.saveSettings(),this.showInPageNotification({title:"Settings Saved",message:"Reminder settings have been updated",details:this.settings.enabled?"Reminders are now enabled":"Reminders are disabled"})}),a&&(a.onclick=()=>{this.showReminder({meetingTitle:"Test Meeting",meetingDate:new Date(Date.now()+30*6e4),reminderLabel:"Test notification",meetingId:"test"})})}enable(){this.settings.enabled=!0,this.saveSettings()}disable(){this.settings.enabled=!1,this.clearAllReminders(),this.saveSettings()}getStats(){let e=this.loadReminders(),t=e.filter(i=>new Date(i.reminderDate)>new Date);return{enabled:this.settings.enabled,totalReminders:e.length,activeReminders:t.length,scheduledTimers:this.reminderTimers.size}}},G=new v});var L=J((se,W)=>{W.exports={meetings:[{id:"2025-07-04",date:"2025-07-04",time:{doorsOpen:"6:30 PM",meetingStart:"7:00 PM",meetingEnd:"9:00 PM"},location:{name:"MacArthur Park Lutheran Church",building:"Building 1",room:"Fellowship Hall",address:{street:"13030 Jones Maltsberger Road",city:"San Antonio",state:"TX",zipCode:"78247"}},type:"holiday",title:"No Meeting - Independence Day",description:"No meeting scheduled due to Independence Day holiday.",contact:{name:"SAPA Secretary",email:"loz33@hotmail.com"},cancelled:!0,tags:["holiday","independence-day"]},{id:"2025-07-11",date:"2025-07-11",time:{doorsOpen:"6:30 PM",meetingStart:"7:00 PM",meetingEnd:"9:00 PM"},location:{name:"MacArthur Park Lutheran Church",building:"Building 1",room:"Fellowship Hall",address:{street:"13030 Jones Maltsberger Road",city:"San Antonio",state:"TX",zipCode:"78247"}},type:"business",title:"Board of Governors Meeting & Show and Tell",topic:"Monthly club business and member presentations",description:"Monthly Board of Governors meeting followed by member show and tell presentations.",agenda:[{time:"6:30 PM",item:"Doors open, social time"},{time:"7:00 PM",item:"Board of Governors meeting",presenter:"Board Members"},{time:"7:30 PM",item:"Show and Tell presentations",presenter:"Members"},{time:"9:00 PM",item:"Meeting adjournment"}],requirements:{rsvpRequired:!1,membershipRequired:!1,bringItems:["Items for show and tell"]},contact:{name:"SAPA Secretary",email:"loz33@hotmail.com"},cancelled:!1,tags:["bog","business","show-and-tell"]},{id:"2025-07-18",date:"2025-07-18",time:{doorsOpen:"6:30 PM",meetingStart:"7:00 PM",meetingEnd:"9:00 PM"},location:{name:"MacArthur Park Lutheran Church",building:"Building 1",room:"Fellowship Hall",address:{street:"13030 Jones Maltsberger Road",city:"San Antonio",state:"TX",zipCode:"78247"}},type:"auction",title:"Stamp Auction",topic:"Monthly stamp auction",description:"Monthly club auction featuring member consignments and donated materials.",agenda:[{time:"6:30 PM",item:"Doors open, lot viewing"},{time:"7:00 PM",item:"Auction preview and announcements"},{time:"7:15 PM",item:"Auction begins"},{time:"8:45 PM",item:"Auction conclusion and checkout"}],specialNotes:["Cash or check accepted for purchases","Bring lots for consignment (10% commission)"],requirements:{rsvpRequired:!1,membershipRequired:!1},contact:{name:"SAPA Secretary",email:"loz33@hotmail.com"},cancelled:!1,tags:["auction","buying","selling","consignment"]},{id:"2025-07-25",date:"2025-07-25",time:{doorsOpen:"6:30 PM",meetingStart:"7:00 PM",meetingEnd:"9:00 PM"},location:{name:"MacArthur Park Lutheran Church",building:"Building 1",room:"Fellowship Hall",address:{street:"13030 Jones Maltsberger Road",city:"San Antonio",state:"TX",zipCode:"78247"}},type:"social",title:"Stamp Bourse",topic:"Dealer tables and stamp trading",description:"Monthly bourse featuring dealer tables and opportunities for buying, selling, and trading stamps and covers.",agenda:[{time:"6:30 PM",item:"Doors open, dealer setup"},{time:"7:00 PM",item:"Bourse officially opens"},{time:"8:30 PM",item:"Final sales and trading"},{time:"9:00 PM",item:"Cleanup and departure"}],specialNotes:["Dealer table rental: $10 for members, $15 for non-members","Contact secretary to reserve tables"],requirements:{rsvpRequired:!1,membershipRequired:!1},contact:{name:"SAPA Secretary",email:"loz33@hotmail.com"},cancelled:!1,tags:["bourse","dealers","trading","buying","selling"]},{id:"2025-08-01",date:"2025-08-01",time:{doorsOpen:"6:30 PM",meetingStart:"7:00 PM",meetingEnd:"9:00 PM"},location:{name:"MacArthur Park Lutheran Church",building:"Building 1",room:"Fellowship Hall",address:{street:"13030 Jones Maltsberger Road",city:"San Antonio",state:"TX",zipCode:"78247"}},type:"business",title:"Board of Governors Meeting & Show and Tell",topic:"Monthly club business and member presentations",description:"Monthly Board of Governors meeting followed by member show and tell presentations.",agenda:[{time:"6:30 PM",item:"Doors open, social time"},{time:"7:00 PM",item:"Board of Governors meeting",presenter:"Board Members"},{time:"7:30 PM",item:"Show and Tell presentations",presenter:"Members"},{time:"9:00 PM",item:"Meeting adjournment"}],requirements:{rsvpRequired:!1,membershipRequired:!1,bringItems:["Items for show and tell"]},contact:{name:"SAPA Secretary",email:"loz33@hotmail.com"},cancelled:!1,tags:["bog","business","show-and-tell"]},{id:"2025-08-08",date:"2025-08-08",time:{doorsOpen:"6:30 PM",meetingStart:"7:00 PM",meetingEnd:"9:00 PM"},location:{name:"MacArthur Park Lutheran Church",building:"Building 1",room:"Fellowship Hall",address:{street:"13030 Jones Maltsberger Road",city:"San Antonio",state:"TX",zipCode:"78247"}},type:"auction",title:"Stamp Auction",topic:"Monthly stamp auction",description:"Monthly club auction featuring member consignments and donated materials.",agenda:[{time:"6:30 PM",item:"Doors open, lot viewing"},{time:"7:00 PM",item:"Auction preview and announcements"},{time:"7:15 PM",item:"Auction begins"},{time:"8:45 PM",item:"Auction conclusion and checkout"}],specialNotes:["Cash or check accepted for purchases","Bring lots for consignment (10% commission)"],requirements:{rsvpRequired:!1,membershipRequired:!1},contact:{name:"SAPA Secretary",email:"loz33@hotmail.com"},cancelled:!1,tags:["auction","buying","selling","consignment"]},{id:"2025-08-15",date:"2025-08-15",time:{doorsOpen:"6:30 PM",meetingStart:"7:00 PM",meetingEnd:"9:00 PM"},location:{name:"MacArthur Park Lutheran Church",building:"Building 1",room:"Fellowship Hall",address:{street:"13030 Jones Maltsberger Road",city:"San Antonio",state:"TX",zipCode:"78247"}},type:"social",title:"Stamp Bourse",topic:"Dealer tables and stamp trading",description:"Monthly bourse featuring dealer tables and opportunities for buying, selling, and trading stamps and covers.",agenda:[{time:"6:30 PM",item:"Doors open, dealer setup"},{time:"7:00 PM",item:"Bourse officially opens"},{time:"8:30 PM",item:"Final sales and trading"},{time:"9:00 PM",item:"Cleanup and departure"}],specialNotes:["Dealer table rental: $10 for members, $15 for non-members","Contact secretary to reserve tables"],requirements:{rsvpRequired:!1,membershipRequired:!1},contact:{name:"SAPA Secretary",email:"loz33@hotmail.com"},cancelled:!1,tags:["bourse","dealers","trading","buying","selling"]},{id:"2025-08-22",date:"2025-08-22",time:{doorsOpen:"6:30 PM",meetingStart:"7:00 PM",meetingEnd:"9:00 PM"},location:{name:"MacArthur Park Lutheran Church",building:"Building 1",room:"Fellowship Hall",address:{street:"13030 Jones Maltsberger Road",city:"San Antonio",state:"TX",zipCode:"78247"}},type:"regular",title:"The Early History of US Air Mail",presenter:{name:"Steve Mabie"},topic:"The Early History of US Air Mail",description:"An exploration of the pioneering days of US air mail service, including the brave pilots, early routes, and the stamps that commemorated these historic achievements.",agenda:[{time:"6:30 PM",item:"Doors open, social time"},{time:"7:00 PM",item:"Welcome and announcements",presenter:"President"},{time:"7:15 PM",item:"Brief show and tell"},{time:"7:30 PM",item:"Main Program: The Early History of US Air Mail",presenter:"Steve Mabie"},{time:"8:45 PM",item:"Q&A and discussion"},{time:"9:00 PM",item:"Meeting adjournment"}],specialNotes:["Bring air mail covers for discussion","Refreshments will be provided"],requirements:{rsvpRequired:!1,membershipRequired:!1,bringItems:["Air mail covers or related items for discussion"]},contact:{name:"SAPA Secretary",email:"loz33@hotmail.com"},cancelled:!1,tags:["air-mail","history","presentation","program"]},{id:"2025-08-29",date:"2025-08-29",time:{doorsOpen:"6:30 PM",meetingStart:"7:00 PM",meetingEnd:"9:00 PM"},location:{name:"MacArthur Park Lutheran Church",building:"Building 1",room:"Fellowship Hall",address:{street:"13030 Jones Maltsberger Road",city:"San Antonio",state:"TX",zipCode:"78247"}},type:"holiday",title:"No Meeting - Labor Day",description:"No meeting scheduled due to Labor Day holiday.",contact:{name:"SAPA Secretary",email:"loz33@hotmail.com"},cancelled:!0,tags:["holiday","labor-day"]},{id:"2025-09-05",date:"2025-09-05",time:{doorsOpen:"6:30 PM",meetingStart:"7:00 PM",meetingEnd:"9:00 PM"},location:{name:"MacArthur Park Lutheran Church",building:"Building 1",room:"Fellowship Hall",address:{street:"13030 Jones Maltsberger Road",city:"San Antonio",state:"TX",zipCode:"78247"}},type:"business",title:"Board of Governors Meeting & Show and Tell",topic:"Monthly club business and member presentations",description:"Monthly Board of Governors meeting followed by member show and tell presentations.",agenda:[{time:"6:30 PM",item:"Doors open, social time"},{time:"7:00 PM",item:"Board of Governors meeting",presenter:"Board Members"},{time:"7:30 PM",item:"Show and Tell presentations",presenter:"Members"},{time:"9:00 PM",item:"Meeting adjournment"}],requirements:{rsvpRequired:!1,membershipRequired:!1,bringItems:["Items for show and tell"]},contact:{name:"SAPA Secretary",email:"loz33@hotmail.com"},cancelled:!1,tags:["bog","business","show-and-tell"]},{id:"2025-09-12",date:"2025-09-12",time:{doorsOpen:"6:30 PM",meetingStart:"7:00 PM",meetingEnd:"9:00 PM"},location:{name:"MacArthur Park Lutheran Church",building:"Building 1",room:"Fellowship Hall",address:{street:"13030 Jones Maltsberger Road",city:"San Antonio",state:"TX",zipCode:"78247"}},type:"auction",title:"Stamp Auction",topic:"Monthly stamp auction",description:"Monthly club auction featuring member consignments and donated materials.",agenda:[{time:"6:30 PM",item:"Doors open, lot viewing"},{time:"7:00 PM",item:"Auction preview and announcements"},{time:"7:15 PM",item:"Auction begins"},{time:"8:45 PM",item:"Auction conclusion and checkout"}],specialNotes:["Cash or check accepted for purchases","Bring lots for consignment (10% commission)"],requirements:{rsvpRequired:!1,membershipRequired:!1},contact:{name:"SAPA Secretary",email:"loz33@hotmail.com"},cancelled:!1,tags:["auction","buying","selling","consignment"]},{id:"2025-09-19",date:"2025-09-19",time:{doorsOpen:"6:30 PM",meetingStart:"7:00 PM",meetingEnd:"9:00 PM"},location:{name:"MacArthur Park Lutheran Church",building:"Building 1",room:"Fellowship Hall",address:{street:"13030 Jones Maltsberger Road",city:"San Antonio",state:"TX",zipCode:"78247"}},type:"social",title:"Stamp Bourse",topic:"Dealer tables and stamp trading",description:"Monthly bourse featuring dealer tables and opportunities for buying, selling, and trading stamps and covers.",agenda:[{time:"6:30 PM",item:"Doors open, dealer setup"},{time:"7:00 PM",item:"Bourse officially opens"},{time:"8:30 PM",item:"Final sales and trading"},{time:"9:00 PM",item:"Cleanup and departure"}],specialNotes:["Dealer table rental: $10 for members, $15 for non-members","Contact secretary to reserve tables"],requirements:{rsvpRequired:!1,membershipRequired:!1},contact:{name:"SAPA Secretary",email:"loz33@hotmail.com"},cancelled:!1,tags:["bourse","dealers","trading","buying","selling"]},{id:"2025-09-26",date:"2025-09-26",time:{doorsOpen:"6:30 PM",meetingStart:"7:00 PM",meetingEnd:"9:00 PM"},location:{name:"MacArthur Park Lutheran Church",building:"Building 1",room:"Fellowship Hall",address:{street:"13030 Jones Maltsberger Road",city:"San Antonio",state:"TX",zipCode:"78247"}},type:"regular",title:"Classic Stamps of Mexico",presenter:{name:"Mark Brill"},topic:"Classic Stamps of Mexico",description:"An exploration of Mexico's classic stamp period, including the famous Hidalgo issues, printing varieties, and the historical context of early Mexican postal history.",agenda:[{time:"6:30 PM",item:"Doors open, social time"},{time:"7:00 PM",item:"Welcome and announcements",presenter:"President"},{time:"7:15 PM",item:"Brief show and tell"},{time:"7:30 PM",item:"Main Program: Classic Stamps of Mexico",presenter:"Mark Brill"},{time:"8:45 PM",item:"Q&A and discussion"},{time:"9:00 PM",item:"Meeting adjournment"}],specialNotes:["Bring Mexican stamps for discussion","Refreshments will be provided"],requirements:{rsvpRequired:!1,membershipRequired:!1,bringItems:["Mexican stamps or covers for discussion"]},contact:{name:"SAPA Secretary",email:"loz33@hotmail.com"},cancelled:!1,tags:["mexican-stamps","classic-period","hidalgo","presentation","program"]},{id:"2025-06-20",date:"2025-06-20",time:{doorsOpen:"5:00 PM",meetingStart:"5:30 PM",meetingEnd:"8:00 PM"},location:{name:"Brackenridge Park",building:"Pavilion Area",address:{street:"3910 N St Mary's St",city:"San Antonio",state:"TX",zipCode:"78212"}},type:"picnic",title:"Annual SAPA Summer Picnic",topic:"Summer Social Gathering",description:"Join us for our annual summer picnic! Food, fellowship, and philatelic fun. Bring the family!",agenda:[{time:"5:00 PM",item:"Setup and arrival"},{time:"5:30 PM",item:"Social time and refreshments"},{time:"6:00 PM",item:"Picnic dinner"},{time:"7:00 PM",item:"Informal stamp trading and socializing"},{time:"8:00 PM",item:"Cleanup and departure"}],specialNotes:["Bring your family!","Food and drinks provided by the club","Bring stamps for informal trading","Weather dependent - check email for updates"],requirements:{rsvpRequired:!0,membershipRequired:!1,bringItems:["Stamps for trading (optional)","Folding chairs (recommended)"]},contact:{name:"Events Coordinator",email:"loz33@hotmail.com"},cancelled:!1,tags:["picnic","social","family","trading","summer"]}],metadata:{lastUpdated:"2025-06-28T17:27:00.000Z",totalMeetings:15,upcomingMeetings:14,version:"1.0",defaultLocation:{name:"MacArthur Park Lutheran Church",building:"Building 1",room:"Fellowship Hall",address:{street:"13030 Jones Maltsberger Road",city:"San Antonio",state:"TX",zipCode:"78247"}}}}});function T(s,e){let t;return function(...n){let a=()=>{clearTimeout(t),s(...n)};clearTimeout(t),t=setTimeout(a,e)}}function h(s,e=document){try{return e.querySelector(s)}catch(t){return console.warn(`Failed to query selector "${s}":`,t),null}}var c=new Map;function m(s,e,t,i){if(!s||typeof s.addEventListener!="function"){console.warn("Invalid element provided to addEventListenerWithCleanup");return}s.addEventListener(e,t,i),c.has(s)||c.set(s,[]),c.get(s).push({event:e,handler:t,options:i})}function j(s=null){if(s){let e=c.get(s);e&&(e.forEach(({event:t,handler:i,options:n})=>{s.removeEventListener(t,i,n)}),c.delete(s))}else c.forEach((e,t)=>{e.forEach(({event:i,handler:n,options:a})=>{try{t.removeEventListener(i,n,a)}catch(o){console.warn("Failed to remove event listener:",o)}})}),c.clear()}typeof window<"u"&&window.addEventListener("beforeunload",()=>{j()});async function B(){await K();let s=h("#meetings-list");s&&await Y(s);let e=h("#meeting-filters");e&&Q(e),Z()}async function K(){let s=h("#meetings-calendar");if(!s){console.warn("Calendar container not found on meetings page");return}try{let[{Calendar:e},{calendarAdapter:t},{modal:i},{reminderSystem:n}]=await Promise.all([import("vanilla-calendar-pro"),Promise.resolve().then(()=>(C(),R)),Promise.resolve().then(()=>(E(),D)),Promise.resolve().then(()=>(P(),w))]),a=t();await a.loadMeetings(),new e(s,{type:"default",settings:{visibility:{daysOutside:!1,weekend:!0},selection:{day:"single"},range:{min:"2024-01-01",max:"2026-12-31"}},actions:{clickDay:(l,r)=>{let u=r.selectedDates[0],d=a.getMeetingByDate(u);d&&i.showMeetingDetails(d)}}}).init(),n.initialize(),console.log("Meetings calendar initialized successfully")}catch(e){console.error("Failed to initialize meetings calendar:",e),s.innerHTML=`
            <div class="error-message">
                <p>Calendar temporarily unavailable. Please try refreshing the page.</p>
                <button onclick="location.reload()">Refresh Page</button>
            </div>
        `}}async function Y(s){try{let{default:e}=await Promise.resolve().then(()=>A(L())),i=e.meetings.sort((n,a)=>new Date(a.date)-new Date(n.date)).map(n=>`
            <article class="meeting-item" data-date="${n.date}" data-type="${n.type||"regular"}">
                <header class="meeting-header">
                    <h3>${n.title}</h3>
                    <time datetime="${n.date}" class="meeting-date">
                        ${new Date(n.date).toLocaleDateString("en-US",{weekday:"long",year:"numeric",month:"long",day:"numeric"})}
                    </time>
                </header>
                
                <div class="meeting-details">
                    <p><strong>Time:</strong> ${n.time}</p>
                    <p><strong>Location:</strong> ${n.location}</p>
                    ${n.description?`<p class="meeting-description">${n.description}</p>`:""}
                    ${n.agenda?`
                        <details class="meeting-agenda">
                            <summary>Agenda</summary>
                            <ul>
                                ${n.agenda.map(a=>`<li>${a}</li>`).join("")}
                            </ul>
                        </details>
                    `:""}
                </div>
                
                <footer class="meeting-actions">
                    <button class="btn-rsvp" data-meeting-id="${n.id}">RSVP</button>
                    <button class="btn-reminder" data-meeting-id="${n.id}">Set Reminder</button>
                    ${n.calendarLink?`<a href="${n.calendarLink}" class="btn-calendar">Add to Calendar</a>`:""}
                </footer>
            </article>
        `).join("");s.innerHTML=i,_(s)}catch(e){console.error("Failed to load meetings list:",e),s.innerHTML='<p class="error-message">Unable to load meetings. Please try again later.</p>'}}function Q(s){let e=new Date().getFullYear(),t=[e-1,e,e+1];s.innerHTML=`
        <div class="filter-group">
            <label for="year-filter">Year:</label>
            <select id="year-filter">
                <option value="">All Years</option>
                ${t.map(r=>`<option value="${r}">${r}</option>`).join("")}
            </select>
        </div>
        
        <div class="filter-group">
            <label for="type-filter">Type:</label>
            <select id="type-filter">
                <option value="">All Types</option>
                <option value="regular">Regular Meetings</option>
                <option value="special">Special Events</option>
                <option value="social">Social Events</option>
            </select>
        </div>
        
        <div class="filter-group">
            <label for="upcoming-only">
                <input type="checkbox" id="upcoming-only"> Upcoming Only
            </label>
        </div>
        
        <button id="clear-filters" class="btn-secondary">Clear Filters</button>
    `;let i=s.querySelector("#year-filter"),n=s.querySelector("#type-filter"),a=s.querySelector("#upcoming-only"),o=s.querySelector("#clear-filters"),l=T(()=>{let r=document.querySelectorAll(".meeting-item"),u=i.value,d=n.value,k=a.checked,q=new Date;r.forEach(b=>{let $=new Date(b.dataset.date),N=b.dataset.type,p=!0;u&&$.getFullYear()!==parseInt(u)&&(p=!1),d&&N!==d&&(p=!1),k&&$<q&&(p=!1),b.style.display=p?"block":"none"})},300);m(i,"change",l),m(n,"change",l),m(a,"change",l),m(o,"click",()=>{i.value="",n.value="",a.checked=!1,l()})}function _(s){s.querySelectorAll(".btn-rsvp").forEach(i=>{m(i,"click",n=>{let a=n.target.dataset.meetingId;handleRSVP(a,i)})}),s.querySelectorAll(".btn-reminder").forEach(i=>{m(i,"click",async n=>{let a=n.target.dataset.meetingId,{reminderSystem:o}=await Promise.resolve().then(()=>(P(),w));o.setReminder(a),i.textContent="Reminder Set!",i.disabled=!0,setTimeout(()=>{i.textContent="Set Reminder",i.disabled=!1},2e3)})})}function Z(){window.handleRSVP=function(e,t){let i=JSON.parse(localStorage.getItem("meeting_rsvps")||"{}"),n=i[e];n?(delete i[e],t.textContent="RSVP",t.classList.remove("rsvp-confirmed")):(i[e]={timestamp:new Date().toISOString(),attendeeCount:1},t.textContent="RSVP Confirmed",t.classList.add("rsvp-confirmed")),localStorage.setItem("meeting_rsvps",JSON.stringify(i));let a=document.createElement("div");a.className="rsvp-confirmation",a.textContent=n?"RSVP cancelled":"Thanks for your RSVP!",t.parentNode.appendChild(a),setTimeout(()=>{a.remove()},3e3)};let s=JSON.parse(localStorage.getItem("meeting_rsvps")||"{}");Object.keys(s).forEach(e=>{let t=document.querySelector(`[data-meeting-id="${e}"]`);t&&t.classList.contains("btn-rsvp")&&(t.textContent="RSVP Confirmed",t.classList.add("rsvp-confirmed"))})}document.readyState==="loading"?document.addEventListener("DOMContentLoaded",B):B();})();
